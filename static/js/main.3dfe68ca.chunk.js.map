{"version":3,"sources":["img/Enigma Coming soon.png","img/EnigmaTopics.png","img/CodeRed Inductions.png","components/NavBar/index.js","components/ide/ide.js","components/ide/index.js","components/home/about.js","components/home/index.js","components/footer/index.js","components/maintenance/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","handleScroll","elem","offsetTop","setState","scrolled","state","window","addEventListener","this","removeEventListener","Navbar","className","collapseOnSelect","expand","variant","sticky","ref","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Component","request","require","Ide","modes","value","label","language","versionIndex","selected","onModeChange","selectedOption","indexOf","mode","onScriptChange","newScript","script","onStdInChange","event","stdin","target","onClear","onRun","executing","stdout","url","method","json","error","response","body","output","theme","style","color","name","placeholder","onChange","options","isSearchable","fontSize","height","width","tabSize","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","ButtonToolbar","Spinner","animation","Button","type","disabled","onClick","Table","borderless","readOnly","About","Home","aboutRef","useRef","Carousel","Item","Caption","scrollTo","current","Provider","size","src","Footer","Maintenance","App","exact","path","component","IDE","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dfe68ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Enigma Coming soon.abcb073d.png\";","module.exports = __webpack_public_path__ + \"static/media/EnigmaTopics.687b0223.png\";","module.exports = __webpack_public_path__ + \"static/media/CodeRed Inductions.150802d1.png\";","import React, { Component } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport '../../css/nav.css'\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {scrolled: false}\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n  handleScroll = () => {\r\n    if(this.elem && this.elem.offsetTop > 0)\r\n      this.setState({scrolled: true})\r\n    else\r\n      this.setState({scrolled: false})\r\n  }\r\n  render() {\r\n    return(\r\n      <Navbar className={this.state.scrolled?\"color-nav\":\"\"} collapseOnSelect expand=\"md\" variant=\"dark\" sticky=\"top\" ref={elem => this.elem = elem}>\r\n        <Navbar.Brand className=\"nav-brand\" href=\"/\">CODE RED</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/enigma\">Enigma-NITR</Nav.Link>\r\n            <Nav.Link href=\"/ide\">IDE</Nav.Link>\r\n            <Nav.Link href=\"/apply\">Join</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/signup\">SignUp</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react'\r\nimport '../../css/ide.css'\r\nimport Select from 'react-select'\r\nimport AceEditor from 'react-ace'\r\n\r\nimport 'ace-builds/src-noconflict/ext-language_tools'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/theme-github'\r\nimport 'ace-builds/src-noconflict/theme-solarized_dark'\r\nimport 'ace-builds/src-noconflict/theme-terminal'\r\nimport { ButtonToolbar, Button, Spinner, Table } from 'react-bootstrap'\r\n\r\nconst request = require('request')\r\n\r\nclass IDE extends Component{\r\n  modes = [{value: \"c_cpp\", label: \"C/C++\", language: \"cpp17\", versionIndex: 0}, {value: \"java\", language: \"java\", label: \"Java\", versionIndex: 3}, {value: \"python\", label: \"Python3\", language: \"python3\", versionIndex: 3}]\r\n  selected = 0\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      script : ``,\r\n      theme : \"monokai\",\r\n      mode : this.modes[this.selected].value,\r\n      stdin : ``,\r\n      stdout : ``,\r\n      executing : false,\r\n    }\r\n  }\r\n\r\n  onModeChange = selectedOption => {\r\n    this.selected = this.modes.indexOf(selectedOption)\r\n    this.setState({mode: selectedOption.value})\r\n  }\r\n\r\n  onScriptChange = newScript => this.setState({script: newScript})\r\n  onStdInChange = event => this.setState({stdin: event.target.value})\r\n  onClear = () => this.setState({script: ``})\r\n  onRun = () => {\r\n    this.setState({executing: true, stdout: `Compiling and Executing your program...`})\r\n    //console.log(this.state)\r\n    request({\r\n      url: 'https://codered-web-server.herokuapp.com/api/execute',\r\n      method: \"POST\",\r\n      json: {\r\n        script: this.state.script,\r\n        language: this.modes[this.selected].language,\r\n        versionIndex: this.modes[this.selected].versionIndex,\r\n        stdin: this.state.stdin\r\n      }\r\n    }, (error, response, body) => {\r\n      if(response)\r\n        this.setState({stdout: response.body.output || ``, executing: false})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className = \"ide bottomPadding\" id = \"ide\">\r\n        <div className = \"center bottomPadding\">\r\n          <span style = {{color: \"#ffffff\"}}>Select Language:</span> <Select\r\n            className = \"inline langSelect\"\r\n            name = \"mode\"\r\n            placeholder = {this.modes[this.selected].label}\r\n            value = {this.state.mode}\r\n            onChange = {this.onModeChange}\r\n            options = {this.modes}\r\n            isSearchable = {false}\r\n            />\r\n          <AceEditor\r\n            className = \"editor\"\r\n            mode = {this.state.mode}\r\n            theme = {this.state.theme}\r\n            fontSize = {14}\r\n            height = '300px'\r\n            width = '50%'\r\n            tabSize = {2}\r\n            setOptions = {{\r\n              enableBasicAutocompletion : true,\r\n              enableLiveAutocompletion : true\r\n            }}\r\n            value = {this.state.script}\r\n            onChange = {this.onScriptChange}\r\n          />\r\n          <ButtonToolbar className = \"btnBar\">\r\n            {this.state.executing ? <Spinner animation = \"grow\" variant = \"danger\"/>:\r\n              <Button className = \"actions\" id = {this.state.executing?\"running\":\"run\"} type = \"button\" disabled = {this.state.executing} onClick = {this.onRun}>{this.state.executing?\"Running...\":\"Run\"}</Button>}\r\n            <Button className = \"actions\" id = \"clear\" type = \"button\" onClick = {this.onClear}>Clear</Button>\r\n          </ButtonToolbar>\r\n        </div>\r\n        <Table className=\"center wd65\" borderless>\r\n          <thead><tr>\r\n            <th>StdIn</th>\r\n            <th>StdOut</th>\r\n          </tr></thead>\r\n        </Table>\r\n        <div className = \"IO center wd65\">\r\n          <div className = \"center inline wd50\">\r\n            <textarea className = \"inp noLeftBorder\" placeholder = \" Enter custom input\" value = {this.state.stdin} onChange = {this.onStdInChange} />\r\n          </div>\r\n          <div className = \"center inline wd50\">\r\n            <textarea className = \"out noRightBorder\" placeholder = \" Run to generate output\" value = {this.state.stdout} readOnly = {true} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IDE","import Ide from './ide'\r\nexport default Ide","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst About = () => {\r\n  return(\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React, { useRef } from 'react'\r\nimport '../../css/home.css'\r\nimport { IconContext } from 'react-icons'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport { AiFillCaretDown } from 'react-icons/ai'\r\nimport About from './about'\r\n\r\nconst Home = () => {\r\n  const aboutRef = useRef(null)\r\n  const scrollToAbout = () => window.scrollTo(0, aboutRef.current.offsetTop)\r\n  return(\r\n    <div className = \"bottomPadding contain center\">\r\n      <div className = \"bottomPadding\">\r\n        <Carousel>\r\n          <Carousel.Item><Carousel.Caption><div className = \"bounce\" onClick = {scrollToAbout}>\r\n              <IconContext.Provider value = {{color: \"#FA3264\", size: \"3em\"}}><AiFillCaretDown /></IconContext.Provider>\r\n          </div></Carousel.Caption></Carousel.Item>\r\n          <Carousel.Item><img src = {require('../../img/Enigma Coming soon.png')} /></Carousel.Item>\r\n          <Carousel.Item><img src = {require('../../img/EnigmaTopics.png')} /></Carousel.Item>\r\n          <Carousel.Item><img src = {require('../../img/CodeRed Inductions.png')} /></Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n      <div ref = {aboutRef}>\r\n        <About />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport '../../css/footer.css'\r\nimport { IconContext } from 'react-icons'\r\nimport { TiSocialFacebookCircular, TiSocialInstagramCircular, TiSocialLinkedinCircular, TiSocialGithubCircular } from 'react-icons/ti'\r\nimport { GiTechnoHeart } from 'react-icons/gi'\r\nimport { FaCode, FaCoffee } from 'react-icons/fa'\r\nimport { DiOpensource } from 'react-icons/di'\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <div>\r\n      <div className = \"foot\">\r\n        <div className = \"about f-inline\">\r\n          <div className = \"f-title\">ABOUT</div>\r\n          <div className = \"f-body\">\r\n            Code Red is a club under the Technical Society of National Institute of Technology Rourkela, centralized on improving the coding culture of the college. We conduct workshops, regular classes, and online contests to indulge budding minds in the sport of competitive programming.\r\n          </div>\r\n          <div className = \"social-links\">\r\n            <IconContext.Provider value = {{color: \"#FA3264\", size: \"2em\"}}>\r\n              <div>\r\n                <a href = 'https://www.facebook.com/coderednitrkl'><TiSocialFacebookCircular /></a>\r\n                <a href = 'https://www.instagram.com/codered.nitrkl/'><TiSocialInstagramCircular /></a>\r\n                <a href = 'https://www.linkedin.com/company/the-code-red-club/'><TiSocialLinkedinCircular /></a>\r\n                <a href = 'https://www.github.com/codered-nitr'><TiSocialGithubCircular /></a>\r\n              </div>\r\n            </IconContext.Provider>\r\n          </div>\r\n        </div>\r\n        <div className = \"events f-inline\">\r\n          <div className = \"f-title\">EVENTS</div>\r\n          <div className = \"f-body\">\r\n            To be updated soon.\r\n          </div>\r\n        </div>\r\n        <div className = \"contact-info f-inline\">\r\n          <div className = \"f-title\">CONTACT INFO</div>\r\n          <div className = \"f-body\">\r\n            <p><strong className = \"cinfo\">Address: </strong>\r\n            Student Activity Centre, Sector 1, National Institute of Technology, Rourkela.\r\n            Odisha, India.\r\n            PIN:769008</p>\r\n            <p><strong className = \"cinfo\">Email: </strong><a href = \"mailto:codered.nitrkl@gmail.com\">codered.nitrkl@gmail.com</a></p>\r\n          </div>\r\n        </div>\r\n        <div className = \"nitr-logo f-inline\">\r\n          <img src = 'https://upload.wikimedia.org/wikipedia/en/thumb/d/d5/NIT_Rourkela_Colour_Logo_SVG.svg/1200px-NIT_Rourkela_Colour_Logo_SVG.svg.png' />\r\n        </div>\r\n      </div>\r\n      <div className = \"sub-footer\">\r\n        <div className = \"center\">\r\n          <IconContext.Provider value = {{color: \"#FA3264\", size: \"1.5em\"}}>\r\n            <FaCode /> with <GiTechnoHeart /> & <FaCoffee />\r\n          </IconContext.Provider>\r\n        </div>\r\n        <div className = \"center\">\r\n          <IconContext.Provider value = {{color: \"#FA3264\", size: \"1.5em\"}}>\r\n            <a href = 'https://www.github.com/codered-nitr/project-dawn'><DiOpensource /></a>\r\n          </IconContext.Provider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport '../../css/maintenance.css'\r\n\r\nconst Maintenance = () => {\r\n  return(\r\n    <div className = \"center maintenance\">\r\n      <h1>This web page is under maintenance!</h1>\r\n      <img \r\n        src = \"https://www.gadgeon.com/theme/cms_image/1559541421_application-maintenance.png\"\r\n      />\r\n      <h3>Please come back later.</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Maintenance","import React from 'react'\nimport './css/App.css'\nimport './css/bg.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport NavBar from './components/NavBar'\nimport IDE from './components/ide'\nimport Home from './components/home'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Apply from './components/apply'\nimport Footer from './components/footer'\nimport Maintenance from './components/maintenance'\n\nfunction App() {\n  return (\n    <div className = \"area rain\">\n      <Router>\n        <div className=\"appBody\">\n          <NavBar />\n          <hr />\n          <ul className=\"circles\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul>\n          <Switch>\n            <Route exact path = \"/\" component = {Home} />\n            <Route path = \"/enigma\" component = {Maintenance} />\n            <Route path = \"/ide\" component = {IDE} />\n            <Route path = \"/apply\" component = {Maintenance} />\n            <Route path = \"/login\" component = {Maintenance} />\n            <Route path = \"/signup\" component = {Maintenance} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}